name: Bygg, publish og deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  APP: medlemskap-oppslag-pdfgen
jobs:
  build-and-publish:
    name: Bygg, test og push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Generer versjon og image navn
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=8 HEAD)
          VERSION=$TIME-$COMMIT
          echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - run: echo $VERSION > VERSION.txt
      - name: Last opp VERSION til neste job
        uses: actions/upload-artifact@v2.2.2
        with:
          name: VERSION.txt
          path: VERSION.txt
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build -t ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy-to-dev-gcp:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev-')
    name: Deploy til dev-gcp (Q1)
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Last ned versjon
        uses: actions/download-artifact@v4.1.7
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy to dev-gcp
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator.yaml
          VARS: nais/dev-gcp.json

  deploy-to-prod-gcp:
    if: github.ref == 'refs/heads/main'
    name: Deploy til prod-gcp (Produksjon)
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Last ned versjon
        uses: actions/download-artifact@v4.1.7
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy to prod-gcp
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/naiserator.yaml
          VARS: nais/prod-gcp.json

  tag-image-as-latest:
    if: github.ref == 'refs/heads/main'
    name: Tag dockerimage as latest
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Last ned versjon
        uses: actions/download-artifact@v4.1.7
        with:
          name: VERSION.txt
          path: .
      - run: echo "VERSION=`cat VERSION.txt`" >> $GITHUB_ENV
      - run: echo "IMAGE=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:$VERSION" >> $GITHUB_ENV
      - run: echo "LATEST=docker.pkg.github.com/${GITHUB_REPOSITORY}/$APP:latest" >> $GITHUB_ENV
      - name: Tag and push docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker pull ${IMAGE}
          docker tag ${IMAGE} ${LATEST}
          docker push ${LATEST}
